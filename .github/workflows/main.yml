name: Create Release on Master

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Git
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Get version from package.json and ensure unique tag
      - name: Determine tag
        id: vars
        run: |
          BASE_VERSION=$(node -p "require('./package.json').version")
          TAG="v$BASE_VERSION"

          # Проверяем, существует ли тег на удалённом
          while git ls-remote --tags origin | grep -q "refs/tags/$TAG"; do
            echo "Tag $TAG exists, incrementing PATCH..."
            IFS='.' read -r MAJOR MINOR PATCH <<< "${TAG#v}"
            PATCH=$((PATCH + 1))
            TAG="v$MAJOR.$MINOR.$PATCH"
          done

          echo "Using tag: $TAG"
          echo "NEXT_TAG=$TAG" >> $GITHUB_ENV

      # 4. Create new tag
      - name: Create Tag
        run: |
          git tag $NEXT_TAG
          git push origin $NEXT_TAG

      # 5. Create GitHub release
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEXT_TAG }}
          release_name: Release ${{ env.NEXT_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
